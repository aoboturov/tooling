<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- This POM: Tooling -->

  <groupId>de.fau.cs.osr</groupId>
  <artifactId>tooling</artifactId>
  <version>1.1.0</version>
  <packaging>pom</packaging>

  <name>Tooling</name>
  <url>http://sweble.org/doc/site/tooling</url>
  <inceptionYear>2011</inceptionYear>
  <description>
    This is a pure POM project that serves as basis for projects developed at
    the Open Source Research Group at the Friedrich-Alexander-University of
    Erlangen-NÃ¼rnberg. It mainly specifies plugin dependencies for derived
    projects and tries to preconfigure all aspects of a project that stay the
    same across most projects.
  </description>

  <!-- ==[ Properties ]===================================================== -->

  <properties>

    <!-- General configuration -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <version.java>1.6</version.java>

    <!-- Dependency versions -->
    <version.dep.junit>4.7</version.dep.junit>
    <version.dep.commons-io>1.4</version.dep.commons-io>
    <version.dep.commons-lang>2.5</version.dep.commons-lang>
    <version.dep.commons-codec>1.6</version.dep.commons-codec>
    <version.dep.commons-collections>3.2.1</version.dep.commons-collections>

    <!-- Plugin dependency versions -->
    <version.plugin.compiler>2.3.2</version.plugin.compiler>
    <version.plugin.jar>2.3.1</version.plugin.jar>
    <version.plugin.war>2.1.1</version.plugin.war>
    <version.plugin.assembly>2.2</version.plugin.assembly>
    <version.plugin.eclipse>2.6</version.plugin.eclipse>
    <version.plugin.release>2.1</version.plugin.release>
    <version.plugin.javadoc>2.8</version.plugin.javadoc>
    <version.plugin.source>2.1.2</version.plugin.source>
    <version.plugin.jar>2.3.1</version.plugin.jar>
    <version.plugin.site>3.0</version.plugin.site>
    <version.plugin.deploy>2.7</version.plugin.deploy>
    <version.plugin.build-helper>1.5</version.plugin.build-helper>
    <version.plugin.surefire>2.12</version.plugin.surefire>
    <version.plugin.archetype>2.2</version.plugin.archetype>
    <version.plugin.license>1.9.0</version.plugin.license>
    <version.plugin.git-commit-id>2.0.3</version.plugin.git-commit-id>
    <version.plugin.gpg>1.4</version.plugin.gpg>
    <version.plugin.exec>1.2.1</version.plugin.exec>

    <!-- Site plugin versions-->
    <version.site-plugin.project-info-reports>2.4</version.site-plugin.project-info-reports>
    <version.site-plugin.surefire-report>2.12</version.site-plugin.surefire-report>
    <version.site-plugin.cobertura>2.5.1</version.site-plugin.cobertura>
    <version.site-plugin.taglist>2.4</version.site-plugin.taglist>
    <version.site-plugin.jxr>2.3</version.site-plugin.jxr>
    <version.site-plugin.plugin>2.9</version.site-plugin.plugin>
    <version.site-plugin.changes>2.7.1</version.site-plugin.changes>

    <!-- Extension versions -->
    <version.wagon.ssh-external>2.2</version.wagon.ssh-external>

  </properties>

  <!-- ==[ Dependencies ]=================================================== -->

  <dependencies>
  </dependencies>

  <!-- ==[ Dependency Management ]========================================== -->

  <!-- Should be done in each project individually! -->

  <!-- The dependencies listed here are some basic stuff that every project
       needs sooner or later. -->
  <dependencyManagement>
    <dependencies>

      <!-- JUnit -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${version.dep.junit}</version>
        <scope>test</scope>
      </dependency>

      <!-- Apache Commons -->
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${version.dep.commons-io}</version>
      </dependency>
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>${version.dep.commons-lang}</version>
      </dependency>
      <dependency>
        <groupId>commons-collections</groupId>
        <artifactId>commons-collections</artifactId>
        <version>${version.dep.commons-collections}</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${version.dep.commons-codec}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>

    <!-- ==[ Resource Configuration ]======================================= -->

    <resources>
      <!-- Doesn't work at least until maven-eclipse-plugin 2.8
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.buildinfo.properties</include>
        </includes>
      </resource>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>**/*.buildinfo.properties</exclude>
        </excludes>
      </resource>
       -->
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/schema</directory>
      </resource>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/java</directory>
        <includes>
          <include>**</include>
        </includes>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <filtering>false</filtering>
        <directory>src/test/resources</directory>
      </testResource>
      <testResource>
        <filtering>false</filtering>
        <directory>src/main/schema</directory>
      </testResource>
      <testResource>
        <filtering>false</filtering>
        <directory>src/test/java</directory>
        <includes>
          <include>**</include>
        </includes>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </testResource>
    </testResources>

    <!-- ==[ Plugin Configuration ]========================================= -->

    <!-- Should be done in each project individually! -->

    <plugins>

      <!-- Check and format license headers -->
      <plugin>
        <groupId>com.mycila.maven-license-plugin</groupId>
        <artifactId>maven-license-plugin</artifactId>
        <inherited>true</inherited>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <!-- Maven site generation -->
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <configuration>
          <reportPlugins>

            <plugin>
              <artifactId>maven-project-info-reports-plugin</artifactId>
            </plugin>

            <plugin>
              <artifactId>maven-changes-plugin</artifactId>
              <configuration>
                <xmlPath>${basedir}/src/site/changes.xml</xmlPath>
              </configuration>
              <reportSets>
                <reportSet>
                  <reports>
                    <report>changes-report</report>
                  </reports>
                </reportSet>
              </reportSets>
            </plugin>

          </reportPlugins>
        </configuration>
      </plugin>

    </plugins>

    <!-- ==[ Plugin Management ]============================================ -->

    <pluginManagement>
      <plugins>

        <!-- Java Maven Compiler Plugin -->
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${version.plugin.compiler}</version>
          <inherited>true</inherited>
          <configuration>
            <source>${version.java}</source>
            <target>${version.java}</target>
            <args>
              <arg>-deprecation</arg>
            </args>
          </configuration>
        </plugin>

        <!-- Make sure MANIFEST files contain version information -->
        <!-- Maven Jar Plugin -->
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${version.plugin.jar}</version>
          <inherited>true</inherited>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
            </archive>
          </configuration>
          <!--
          <executions>
            <execution>
              <inherited>true</inherited>
              <phase>package</phase>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
          -->
        </plugin>

        <!-- Make sure MANIFEST files contain version information -->
        <!-- Maven War Plugin -->
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>${version.plugin.war}</version>
          <inherited>true</inherited>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>

        <!-- Maven Assembly Plugin -->
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${version.plugin.assembly}</version>
          <inherited>true</inherited>
        </plugin>

        <!-- Maven Eclipse Plugin -->
        <plugin>
          <artifactId>maven-eclipse-plugin</artifactId>
          <version>${version.plugin.eclipse}</version>
          <inherited>true</inherited>
          <configuration>
            <downloadSources>true</downloadSources>
            <downloadJavadocs>true</downloadJavadocs>
          </configuration>
        </plugin>

        <!-- Maven Release Plugin -->
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>${version.plugin.release}</version>
          <inherited>true</inherited>
          <configuration>
            <!-- Don't do site-deploy! -->
            <goals>deploy</goals>
          </configuration>
        </plugin>

        <!-- Maven Javadoc Plugin -->
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${version.plugin.javadoc}</version>
          <inherited>true</inherited>
          <!-- confuses release plugin
          <executions>
            <execution>
              <inherited>true</inherited>
              <id>javadoc-jar</id>
              <phase>package</phase>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
          -->
          <configuration>
            <quiet>true</quiet>
          </configuration>
        </plugin>

        <!-- Maven Source Plugin -->
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>${version.plugin.source}</version>
          <inherited>true</inherited>
          <!-- confuses release plugin
          <executions>
            <execution>
              <inherited>true</inherited>
              <phase>package</phase>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
          -->
        </plugin>

        <!-- Maven Deploy Plugin -->
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${version.plugin.deploy}</version>
          <inherited>true</inherited>
        </plugin>

        <!-- Build Helper Maven Plugin -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${version.plugin.build-helper}</version>
          <inherited>true</inherited>
        </plugin>

        <!-- Maven Surefire Plugin -->
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${version.plugin.surefire}</version>
          <inherited>true</inherited>
        </plugin>

        <!-- Maven Archetype Plugin -->
        <plugin>
          <artifactId>maven-archetype-plugin</artifactId>
          <version>${version.plugin.archetype}</version>
        </plugin>

        <!-- Check and format license headers -->
        <plugin>
          <groupId>com.mycila.maven-license-plugin</groupId>
          <artifactId>maven-license-plugin</artifactId>
          <version>${version.plugin.license}</version>
          <inherited>true</inherited>
          <executions>
            <execution>
              <inherited>true</inherited>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Get Git commit information -->
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>${version.plugin.git-commit-id}</version>
          <inherited>true</inherited>
          <configuration>
            <verbose>false</verbose>
          </configuration>
          <executions>
            <!-- Disabled until problem
              https://github.com/ktoso/maven-git-commit-id-plugin/issues/19
              is resolved -->
            <execution>
              <id>git-commit-info-disabled</id>
              <phase>none</phase>
            </execution>
            <!--
            <execution>
              <goals>
                <goal>revision</goal>
              </goals>
            </execution>
            -->
          </executions>
        </plugin>

        <!-- Maven GPG Plugin -->
        <plugin>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${version.plugin.gpg}</version>
          <inherited>true</inherited>
          <configuration>
            <useAgent>true</useAgent>
          </configuration>
        </plugin>

        <!-- Execute system and Java programs -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${version.plugin.exec}</version>
        </plugin>

        <!-- Maven Site Plugin -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>${version.plugin.site}</version>
          <inherited>true</inherited>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.wagon</groupId>
              <artifactId>wagon-ssh-external</artifactId>
              <version>${version.wagon.ssh-external}</version>
            </dependency>
          </dependencies>
        </plugin>

        <!-- Maven Project Info Report Plugin -->
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${version.site-plugin.project-info-reports}</version>
          <inherited>true</inherited>
          <!-- This is not inherited to the report plugin in other modules
          <reportSets>
            <reportSet>
              <reports>
                <report>dependencies</report>
                <report>dependency-convergence</report>
                <report>dependency-management</report>
                <report>distribution-management</report>
                <report>index</report>
                <report>issue-tracking</report>
                <report>license</report>
                <report>mailing-list</report>
                <report>modules</report>
                <report>plugin-management</report>
                <report>plugins</report>
                <report>project-team</report>
                <report>scm</report>
                <report>summary</report>
              </reports>
            </reportSet>
          </reportSets>
          -->
        </plugin>

        <!-- Maven Plugin Plugin -->
        <plugin>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>${version.site-plugin.plugin}</version>
        </plugin>

        <!-- Maven Surefire Report Plugin -->
        <plugin>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>${version.site-plugin.surefire-report}</version>
          <inherited>true</inherited>
        </plugin>

        <!-- Maven Java Cross Reference Plugin -->
        <plugin>
          <artifactId>maven-jxr-plugin</artifactId>
          <version>${version.site-plugin.jxr}</version>
          <inherited>true</inherited>
        </plugin>

        <!-- Maven Cobertura Report Plugin -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>${version.site-plugin.cobertura}</version>
          <inherited>true</inherited>
        </plugin>

        <!-- Maven Taglist Report Plugin -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>taglist-maven-plugin</artifactId>
          <version>${version.site-plugin.taglist}</version>
          <inherited>true</inherited>
          <!-- This is not inherited to the report plugin in other modules
          <configuration>
            <encoding>UTF-8</encoding>
            <sourceFileLocale>en</sourceFileLocale>
            <emptyComments>true</emptyComments>
            <tagListOptions>
              <tagClasses>
                <tagClass>
                  <displayName>Code Work</displayName>
                  <tags>
                    <tag>
                      <matchString>fixme</matchString>
                      <matchType>ignoreCase</matchType>
                    </tag>
                    <tag>
                      <matchString>todo</matchString>
                      <matchType>ignoreCase</matchType>
                    </tag>
                    <tag>
                      <matchString>@todo</matchString>
                      <matchType>ignoreCase</matchType>
                    </tag>
                  </tags>
                </tagClass>
              </tagClasses>
            </tagListOptions>
          </configuration>
          -->
        </plugin>

        <plugin>
          <artifactId>maven-changes-plugin</artifactId>
          <version>${version.site-plugin.changes}</version>
          <inherited>true</inherited>
        </plugin>

      </plugins>
    </pluginManagement>

    <!-- ==[ Build Element Set ]============================================ -->

    <!--
    <sourceDirectory>${basedir}/src/main/java</sourceDirectory>
    <scriptSourceDirectory>${basedir}/src/main/scripts</scriptSourceDirectory>
    <testSourceDirectory>${basedir}/src/test/java</testSourceDirectory>
    <outputDirectory>${basedir}/target/classes</outputDirectory>
    <testOutputDirectory>${basedir}/target/test-classes</testOutputDirectory>
    -->

    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh-external</artifactId>
        <version>${version.wagon.ssh-external}</version>
      </extension>
    </extensions>
  </build>

  <!-- ==[ Reporting ]====================================================== -->

  <!--
  <reporting>
    <plugins>

      <!- Javadoc ->
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>

      <!- Scaladoc ->
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
      </plugin>

      <!- Cross referencing ->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jxr-maven-plugin</artifactId>
      </plugin>

      <!- JUnit reports ->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <!- Test coverage ->
      <plugin>
        <artifactId>maven-clover-plugin</artifactId>
      </plugin>

      <!- Code analysis report ->
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <targetjdk>${version.java}</targetjdk>
          <rulesets>
            <ruleset>/rulesets/basic.xml</ruleset>
            <ruleset>/rulesets/controversial.xml</ruleset>
          </rulesets>
          <format>xml</format>
          <linkXref>true</linkXref>
          <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
          <minimumTokens>100</minimumTokens>
        </configuration>
      </plugin>

      <!- SCM changelog report ->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>changelog-maven-plugin</artifactId>
      </plugin>

      <!- Todo tags report ->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
      </plugin>

    </plugins>
  </reporting>
  -->

  <!-- ==[ More Project Information ]======================================= -->

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <organization>
    <name>University of Erlangen-NÃ¼rnberg - Open Source Research Group</name>
    <url>http://osr.informatik.uni-erlangen.de</url>
  </organization>

  <developers>
    <developer>
      <id>driehle</id>
      <name>Dirk Riehle</name>
      <email>dirk.riehle@informatik.uni-erlangen.de</email>
      <roles>
        <role>Director</role>
      </roles>
      <organization>University of Erlangen-NÃ¼rnberg - Open Source Research Group</organization>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>hdohrn</id>
      <name>Hannes Dohrn</name>
      <email>hannes.dohrn@informatik.uni-erlangen.de</email>
      <roles>
        <role>Developer</role>
      </roles>
      <organization>University of Erlangen-NÃ¼rnberg - Open Source Research Group</organization>
      <timezone>+1</timezone>
    </developer>
  </developers>

  <!--
  <contributors>
    <contributor>
      <name>Max Mustermann</name>
      <email>max.mustermann@example.com</email>
      <url>http://maxmustermann.com</url>
      <organization>Example AG</organization>
      <organizationUrl>http://example.com</organizationUrl>
      <roles>
        <role>tester</role>
      </roles>
      <timezone>+1</timezone>
    </contributor>
  </contributors>
  -->

  <!-- ==[ Environment Settings ]=========================================== -->

  <issueManagement>
    <system>Mantis</system>
    <url>http://sweble.org/bugtracker/</url>
  </issueManagement>

  <!--
  <ciManagement>
    <system>Continuum</system>
    <url>http://example.com/continuum</url>
    <notifiers>
      <notifier>
        <type>mail</type>
        <address>max.mustermann@example.com</address>
      </notifier>
    </notifiers>
  </ciManagement>
  -->

  <mailingLists>
    <mailingList>
      <name>Sweble Project - General Discussion</name>
      <subscribe>sweble-wt-parser-subscribe@sweble.org</subscribe>
      <unsubscribe>sweble-wt-parser-unsubscribe@sweble.org</unsubscribe>
      <post>sweble-wt-parser@sweble.org</post>
      <archive>http://sweble.org/pipermail/sweble-wt-parser/</archive>
    </mailingList>
    <mailingList>
      <name>Sweble Project - Developer Discussion</name>
      <subscribe>sweble-wt-parser-devel-subscribe@sweble.org</subscribe>
      <unsubscribe>sweble-wt-parser-devel-unsubscribe@sweble.org</unsubscribe>
      <post>sweble-wt-parser-devel@sweble.org</post>
      <archive>http://sweble.org/pipermail/sweble-wt-parser-devel/</archive>
    </mailingList>
  </mailingLists>

  <scm>
    <connection>scm:git://sweble.org/git/tooling.git</connection>
    <developerConnection>scm:git:ssh://gitosis@sweble.org/tooling.git</developerConnection>
    <url>http://sweble.org/gitweb/?p=tooling.git;a=summary</url>
  </scm>

  <distributionManagement>
    <repository>
      <id>sonatype-nexus-staging</id>
      <name>Sonatype Nexus Staging</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>osr-public-snapshots-deployment</id>
      <name>OSR Public Snapshots Deployment</name>
      <url>http://mojo.informatik.uni-erlangen.de/nexus/content/repositories/public-snapshots</url>
    </snapshotRepository>
    <site>
      <id>sweble.org</id>
      <url>http://sweble.org/doc/site/tooling</url>
    </site>
  </distributionManagement>

  <repositories>
    <repository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </snapshots>
      <id>osr-public-snapshots-repo</id>
      <name>OSR Public Snapshots Repository</name>
      <url>http://mojo.informatik.uni-erlangen.de/nexus/content/repositories/public</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </snapshots>
      <id>osr-public-plugin-snapshots-repo</id>
      <name>OSR Public Plugin Snapshots Repository</name>
      <url>http://mojo.informatik.uni-erlangen.de/nexus/content/repositories/public</url>
    </pluginRepository>
  </pluginRepositories>

  <!-- ==[ Profiles ]======================================================= -->

  <profiles>

    <profile>
      <id>quick</id>
      <build>
        <plugins>

          <!-- Skip assembly generation -->
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>${version.plugin.assembly}</version>
            <inherited>true</inherited>
            <configuration>
              <skipAssembly>true</skipAssembly>
            </configuration>
          </plugin>

          <!-- Skip javadoc generation -->
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${version.plugin.javadoc}</version>
            <inherited>true</inherited>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>

          <!-- Skip source generation -->
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <version>${version.plugin.source}</version>
            <inherited>true</inherited>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>

          <!-- Don't check and format license headers -->
          <plugin>
            <groupId>com.mycila.maven-license-plugin</groupId>
            <artifactId>maven-license-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>

          <!-- Only generate minimal site -->
          <plugin>
            <artifactId>maven-site-plugin</artifactId>
            <configuration>
              <reportPlugins>
                <plugin>
                  <artifactId>maven-project-info-reports-plugin</artifactId>
                  <reportSets>
                    <reportSet>
                      <reports>
                        <!-- cim, dependencies, dependency-convergence -->
                        <report>dependency-management</report>
                        <report>distribution-management</report>
                        <report>index</report>
                        <report>issue-tracking</report>
                        <report>license</report>
                        <report>mailing-list</report>
                        <report>modules</report>
                        <report>plugin-management</report>
                        <report>plugins</report>
                        <report>project-team</report>
                        <report>scm</report>
                        <report>summary</report>
                      </reports>
                    </reportSet>
                  </reportSets>
                </plugin>
              </reportPlugins>
            </configuration>
          </plugin>

        </plugins>
      </build>
    </profile>

    <profile>
      <id>release</id>
      <build>
        <plugins>

          <!-- Maven Javadoc Plugin -->
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <inherited>true</inherited>
            <executions>
              <execution>
                <id>javadoc-jar</id>
                <phase>package</phase>
                <goals>
                  <goal>jar</goal>
                </goals>
                <inherited>true</inherited>
              </execution>
            </executions>
            <configuration>
              <quiet>true</quiet>
            </configuration>
          </plugin>

          <!-- Maven Source Plugin -->
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <inherited>true</inherited>
            <executions>
              <execution>
                <id>sources-jar</id>
                <phase>package</phase>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
                <inherited>true</inherited>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>

    <profile>
      <id>sign</id>
      <build>
        <plugins>

          <!-- Maven GPG Plugin -->
          <plugin>
            <artifactId>maven-gpg-plugin</artifactId>
            <configuration>
              <!-- Sweble <info@sweble.org> -->
              <keyname>D17B20AF</keyname>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>

  </profiles>
</project>
